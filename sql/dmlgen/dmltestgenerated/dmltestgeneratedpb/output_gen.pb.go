// Code generated by codegen. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.1
// source: output_gen.proto

package dmltestgeneratedpb

import (
	null "github.com/corestoreio/pkg/storage/null"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CatalogProductIndexEAVDecimalIDX represents a single row for
// catalog_product_index_eav_decimal_idx DB table. Auto generated.
// Table comment: Catalog Product EAV Decimal Indexer Index Table
type CatalogProductIndexEAVDecimalIDX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID    uint32        `protobuf:"varint,1,opt,name=EntityID,proto3" json:"EntityID,omitempty"`       // Entity ID
	AttributeID uint32        `protobuf:"varint,2,opt,name=AttributeID,proto3" json:"AttributeID,omitempty"` // Attribute ID
	StoreID     uint32        `protobuf:"varint,3,opt,name=StoreID,proto3" json:"StoreID,omitempty"`         // Store ID
	SourceID    uint32        `protobuf:"varint,4,opt,name=SourceID,proto3" json:"SourceID,omitempty"`       // Original entity Id for attribute value
	Value       *null.Decimal `protobuf:"bytes,5,opt,name=Value,proto3" json:"Value,omitempty"`              // Value
}

func (x *CatalogProductIndexEAVDecimalIDX) Reset() {
	*x = CatalogProductIndexEAVDecimalIDX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_gen_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogProductIndexEAVDecimalIDX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogProductIndexEAVDecimalIDX) ProtoMessage() {}

func (x *CatalogProductIndexEAVDecimalIDX) ProtoReflect() protoreflect.Message {
	mi := &file_output_gen_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogProductIndexEAVDecimalIDX.ProtoReflect.Descriptor instead.
func (*CatalogProductIndexEAVDecimalIDX) Descriptor() ([]byte, []int) {
	return file_output_gen_proto_rawDescGZIP(), []int{0}
}

func (x *CatalogProductIndexEAVDecimalIDX) GetEntityID() uint32 {
	if x != nil {
		return x.EntityID
	}
	return 0
}

func (x *CatalogProductIndexEAVDecimalIDX) GetAttributeID() uint32 {
	if x != nil {
		return x.AttributeID
	}
	return 0
}

func (x *CatalogProductIndexEAVDecimalIDX) GetStoreID() uint32 {
	if x != nil {
		return x.StoreID
	}
	return 0
}

func (x *CatalogProductIndexEAVDecimalIDX) GetSourceID() uint32 {
	if x != nil {
		return x.SourceID
	}
	return 0
}

func (x *CatalogProductIndexEAVDecimalIDX) GetValue() *null.Decimal {
	if x != nil {
		return x.Value
	}
	return nil
}

// CatalogProductIndexEAVDecimalIDXes represents multiple rows for the
// catalog_product_index_eav_decimal_idx DB table. Auto generated.
type CatalogProductIndexEAVDecimalIDXes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*CatalogProductIndexEAVDecimalIDX `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *CatalogProductIndexEAVDecimalIDXes) Reset() {
	*x = CatalogProductIndexEAVDecimalIDXes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_gen_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogProductIndexEAVDecimalIDXes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogProductIndexEAVDecimalIDXes) ProtoMessage() {}

func (x *CatalogProductIndexEAVDecimalIDXes) ProtoReflect() protoreflect.Message {
	mi := &file_output_gen_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogProductIndexEAVDecimalIDXes.ProtoReflect.Descriptor instead.
func (*CatalogProductIndexEAVDecimalIDXes) Descriptor() ([]byte, []int) {
	return file_output_gen_proto_rawDescGZIP(), []int{1}
}

func (x *CatalogProductIndexEAVDecimalIDXes) GetData() []*CatalogProductIndexEAVDecimalIDX {
	if x != nil {
		return x.Data
	}
	return nil
}

// CoreConfiguration represents a single row for core_configuration DB table.
// Auto generated.
// Table comment: Config Data
type CoreConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigID  uint32                 `protobuf:"varint,1,opt,name=ConfigID,proto3" json:"ConfigID,omitempty"`  // Id
	Scope     string                 `protobuf:"bytes,2,opt,name=Scope,proto3" json:"Scope,omitempty"`         // Scope
	ScopeID   int32                  `protobuf:"varint,3,opt,name=ScopeID,proto3" json:"ScopeID,omitempty"`    // Scope Id
	Expires   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=Expires,proto3" json:"Expires,omitempty"`     // Value expiration time
	Path      string                 `protobuf:"bytes,5,opt,name=Path,proto3" json:"Path,omitempty"`           // Config Path overwritten
	Value     string                 `protobuf:"bytes,6,opt,name=Value,proto3" json:"Value,omitempty"`         // Value
	VersionTs *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=VersionTs,proto3" json:"VersionTs,omitempty"` // Timestamp Start Versioning
	VersionTe *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=VersionTe,proto3" json:"VersionTe,omitempty"` // Timestamp End Versioning
}

func (x *CoreConfiguration) Reset() {
	*x = CoreConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_gen_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreConfiguration) ProtoMessage() {}

func (x *CoreConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_output_gen_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreConfiguration.ProtoReflect.Descriptor instead.
func (*CoreConfiguration) Descriptor() ([]byte, []int) {
	return file_output_gen_proto_rawDescGZIP(), []int{2}
}

func (x *CoreConfiguration) GetConfigID() uint32 {
	if x != nil {
		return x.ConfigID
	}
	return 0
}

func (x *CoreConfiguration) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *CoreConfiguration) GetScopeID() int32 {
	if x != nil {
		return x.ScopeID
	}
	return 0
}

func (x *CoreConfiguration) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

func (x *CoreConfiguration) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CoreConfiguration) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CoreConfiguration) GetVersionTs() *timestamppb.Timestamp {
	if x != nil {
		return x.VersionTs
	}
	return nil
}

func (x *CoreConfiguration) GetVersionTe() *timestamppb.Timestamp {
	if x != nil {
		return x.VersionTe
	}
	return nil
}

// CoreConfigurations represents multiple rows for the core_configuration DB
// table. Auto generated.
type CoreConfigurations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*CoreConfiguration `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *CoreConfigurations) Reset() {
	*x = CoreConfigurations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_gen_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreConfigurations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreConfigurations) ProtoMessage() {}

func (x *CoreConfigurations) ProtoReflect() protoreflect.Message {
	mi := &file_output_gen_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreConfigurations.ProtoReflect.Descriptor instead.
func (*CoreConfigurations) Descriptor() ([]byte, []int) {
	return file_output_gen_proto_rawDescGZIP(), []int{3}
}

func (x *CoreConfigurations) GetData() []*CoreConfiguration {
	if x != nil {
		return x.Data
	}
	return nil
}

// CustomerAddressEntity represents a single row for customer_address_entity DB
// table. Auto generated.
// Table comment: Customer Address Entity
type CustomerAddressEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID    uint32                 `protobuf:"varint,1,opt,name=EntityID,proto3" json:"EntityID,omitempty"`      // Entity ID
	IncrementID string                 `protobuf:"bytes,2,opt,name=IncrementID,proto3" json:"IncrementID,omitempty"` // Increment Id
	ParentID    uint32                 `protobuf:"varint,3,opt,name=ParentID,proto3" json:"ParentID,omitempty"`      // Parent ID
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`     // Created At
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`     // Updated At
	IsActive    bool                   `protobuf:"varint,6,opt,name=IsActive,proto3" json:"IsActive,omitempty"`      // Is Active
	City        string                 `protobuf:"bytes,7,opt,name=City,proto3" json:"City,omitempty"`               // City
	Company     string                 `protobuf:"bytes,8,opt,name=Company,proto3" json:"Company,omitempty"`         // Company
	CountryID   string                 `protobuf:"bytes,9,opt,name=CountryID,proto3" json:"CountryID,omitempty"`     // Country
	Firstname   string                 `protobuf:"bytes,10,opt,name=Firstname,proto3" json:"Firstname,omitempty"`    // First Name
	Lastname    string                 `protobuf:"bytes,11,opt,name=Lastname,proto3" json:"Lastname,omitempty"`      // Last Name
	Postcode    string                 `protobuf:"bytes,12,opt,name=Postcode,proto3" json:"Postcode,omitempty"`      // Zip/Postal Code
	Region      string                 `protobuf:"bytes,13,opt,name=Region,proto3" json:"Region,omitempty"`          // State/Province
	Street      string                 `protobuf:"bytes,14,opt,name=Street,proto3" json:"Street,omitempty"`          // Street Address
}

func (x *CustomerAddressEntity) Reset() {
	*x = CustomerAddressEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_gen_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerAddressEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerAddressEntity) ProtoMessage() {}

func (x *CustomerAddressEntity) ProtoReflect() protoreflect.Message {
	mi := &file_output_gen_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerAddressEntity.ProtoReflect.Descriptor instead.
func (*CustomerAddressEntity) Descriptor() ([]byte, []int) {
	return file_output_gen_proto_rawDescGZIP(), []int{4}
}

func (x *CustomerAddressEntity) GetEntityID() uint32 {
	if x != nil {
		return x.EntityID
	}
	return 0
}

func (x *CustomerAddressEntity) GetIncrementID() string {
	if x != nil {
		return x.IncrementID
	}
	return ""
}

func (x *CustomerAddressEntity) GetParentID() uint32 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *CustomerAddressEntity) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CustomerAddressEntity) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CustomerAddressEntity) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *CustomerAddressEntity) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CustomerAddressEntity) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *CustomerAddressEntity) GetCountryID() string {
	if x != nil {
		return x.CountryID
	}
	return ""
}

func (x *CustomerAddressEntity) GetFirstname() string {
	if x != nil {
		return x.Firstname
	}
	return ""
}

func (x *CustomerAddressEntity) GetLastname() string {
	if x != nil {
		return x.Lastname
	}
	return ""
}

func (x *CustomerAddressEntity) GetPostcode() string {
	if x != nil {
		return x.Postcode
	}
	return ""
}

func (x *CustomerAddressEntity) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CustomerAddressEntity) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

// CustomerAddressEntities represents multiple rows for the
// customer_address_entity DB table. Auto generated.
type CustomerAddressEntities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*CustomerAddressEntity `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *CustomerAddressEntities) Reset() {
	*x = CustomerAddressEntities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_gen_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerAddressEntities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerAddressEntities) ProtoMessage() {}

func (x *CustomerAddressEntities) ProtoReflect() protoreflect.Message {
	mi := &file_output_gen_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerAddressEntities.ProtoReflect.Descriptor instead.
func (*CustomerAddressEntities) Descriptor() ([]byte, []int) {
	return file_output_gen_proto_rawDescGZIP(), []int{5}
}

func (x *CustomerAddressEntities) GetData() []*CustomerAddressEntity {
	if x != nil {
		return x.Data
	}
	return nil
}

// CustomerEntity represents a single row for customer_entity DB table. Auto
// generated.
// Table comment: Customer Entity
type CustomerEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID                uint32                   `protobuf:"varint,1,opt,name=EntityID,proto3" json:"EntityID,omitempty"`                               // Entity ID
	WebsiteID               uint32                   `protobuf:"varint,2,opt,name=WebsiteID,proto3" json:"WebsiteID,omitempty"`                             // Website ID
	Email                   string                   `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`                                      // Email
	GroupID                 uint32                   `protobuf:"varint,4,opt,name=GroupID,proto3" json:"GroupID,omitempty"`                                 // Group ID
	StoreID                 uint32                   `protobuf:"varint,5,opt,name=StoreID,proto3" json:"StoreID,omitempty"`                                 // Store ID
	CreatedAt               *timestamppb.Timestamp   `protobuf:"bytes,6,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`                              // Created At
	UpdatedAt               *timestamppb.Timestamp   `protobuf:"bytes,7,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`                              // Updated At
	IsActive                bool                     `protobuf:"varint,8,opt,name=IsActive,proto3" json:"IsActive,omitempty"`                               // Is Active
	CreatedIn               string                   `protobuf:"bytes,9,opt,name=CreatedIn,proto3" json:"CreatedIn,omitempty"`                              // Created From
	Firstname               string                   `protobuf:"bytes,10,opt,name=Firstname,proto3" json:"Firstname,omitempty"`                             // First Name
	Lastname                string                   `protobuf:"bytes,11,opt,name=Lastname,proto3" json:"Lastname,omitempty"`                               // Last Name
	Dob                     *timestamppb.Timestamp   `protobuf:"bytes,12,opt,name=Dob,proto3" json:"Dob,omitempty"`                                         // Date of Birth
	RpToken                 string                   `protobuf:"bytes,14,opt,name=RpToken,proto3" json:"RpToken,omitempty"`                                 // Reset password token
	RpTokenCreatedAt        *timestamppb.Timestamp   `protobuf:"bytes,15,opt,name=RpTokenCreatedAt,proto3" json:"RpTokenCreatedAt,omitempty"`               // Reset password token creation time
	DefaultBilling          uint32                   `protobuf:"varint,16,opt,name=DefaultBilling,proto3" json:"DefaultBilling,omitempty"`                  // Default Billing Address
	DefaultShipping         uint32                   `protobuf:"varint,17,opt,name=DefaultShipping,proto3" json:"DefaultShipping,omitempty"`                // Default Shipping Address
	Gender                  uint32                   `protobuf:"varint,18,opt,name=Gender,proto3" json:"Gender,omitempty"`                                  // Gender
	CustomerAddressEntities *CustomerAddressEntities `protobuf:"bytes,19,opt,name=CustomerAddressEntities,proto3" json:"CustomerAddressEntities,omitempty"` // Reversed 1:M customer_entity.entity_id => customer_address_entity.parent_id
}

func (x *CustomerEntity) Reset() {
	*x = CustomerEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_gen_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerEntity) ProtoMessage() {}

func (x *CustomerEntity) ProtoReflect() protoreflect.Message {
	mi := &file_output_gen_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerEntity.ProtoReflect.Descriptor instead.
func (*CustomerEntity) Descriptor() ([]byte, []int) {
	return file_output_gen_proto_rawDescGZIP(), []int{6}
}

func (x *CustomerEntity) GetEntityID() uint32 {
	if x != nil {
		return x.EntityID
	}
	return 0
}

func (x *CustomerEntity) GetWebsiteID() uint32 {
	if x != nil {
		return x.WebsiteID
	}
	return 0
}

func (x *CustomerEntity) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CustomerEntity) GetGroupID() uint32 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *CustomerEntity) GetStoreID() uint32 {
	if x != nil {
		return x.StoreID
	}
	return 0
}

func (x *CustomerEntity) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CustomerEntity) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CustomerEntity) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *CustomerEntity) GetCreatedIn() string {
	if x != nil {
		return x.CreatedIn
	}
	return ""
}

func (x *CustomerEntity) GetFirstname() string {
	if x != nil {
		return x.Firstname
	}
	return ""
}

func (x *CustomerEntity) GetLastname() string {
	if x != nil {
		return x.Lastname
	}
	return ""
}

func (x *CustomerEntity) GetDob() *timestamppb.Timestamp {
	if x != nil {
		return x.Dob
	}
	return nil
}

func (x *CustomerEntity) GetRpToken() string {
	if x != nil {
		return x.RpToken
	}
	return ""
}

func (x *CustomerEntity) GetRpTokenCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RpTokenCreatedAt
	}
	return nil
}

func (x *CustomerEntity) GetDefaultBilling() uint32 {
	if x != nil {
		return x.DefaultBilling
	}
	return 0
}

func (x *CustomerEntity) GetDefaultShipping() uint32 {
	if x != nil {
		return x.DefaultShipping
	}
	return 0
}

func (x *CustomerEntity) GetGender() uint32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *CustomerEntity) GetCustomerAddressEntities() *CustomerAddressEntities {
	if x != nil {
		return x.CustomerAddressEntities
	}
	return nil
}

// CustomerEntities represents multiple rows for the customer_entity DB table.
// Auto generated.
type CustomerEntities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*CustomerEntity `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *CustomerEntities) Reset() {
	*x = CustomerEntities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_gen_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerEntities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerEntities) ProtoMessage() {}

func (x *CustomerEntities) ProtoReflect() protoreflect.Message {
	mi := &file_output_gen_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerEntities.ProtoReflect.Descriptor instead.
func (*CustomerEntities) Descriptor() ([]byte, []int) {
	return file_output_gen_proto_rawDescGZIP(), []int{7}
}

func (x *CustomerEntities) GetData() []*CustomerEntity {
	if x != nil {
		return x.Data
	}
	return nil
}

// DmlgenTypes represents a single row for dmlgen_types DB table. Auto generated.
type DmlgenTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             int32                  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`                         //
	ColBigint1     int64                  `protobuf:"varint,2,opt,name=ColBigint1,proto3" json:"ColBigint1,omitempty"`         //
	ColBigint2     int64                  `protobuf:"varint,3,opt,name=ColBigint2,proto3" json:"ColBigint2,omitempty"`         //
	ColBigint3     uint64                 `protobuf:"varint,4,opt,name=ColBigint3,proto3" json:"ColBigint3,omitempty"`         //
	ColBigint4     uint64                 `protobuf:"varint,5,opt,name=ColBigint4,proto3" json:"ColBigint4,omitempty"`         //
	ColBlob        []byte                 `protobuf:"bytes,6,opt,name=ColBlob,proto3" json:"ColBlob,omitempty"`                //
	ColDate1       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=ColDate1,proto3" json:"ColDate1,omitempty"`              //
	ColDate2       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=ColDate2,proto3" json:"ColDate2,omitempty"`              //
	ColDatetime1   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=ColDatetime1,proto3" json:"ColDatetime1,omitempty"`      //
	ColDatetime2   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=ColDatetime2,proto3" json:"ColDatetime2,omitempty"`     //
	ColDecimal101  *null.Decimal          `protobuf:"bytes,11,opt,name=ColDecimal101,proto3" json:"ColDecimal101,omitempty"`   //
	ColDecimal124  *null.Decimal          `protobuf:"bytes,12,opt,name=ColDecimal124,proto3" json:"ColDecimal124,omitempty"`   //
	PriceA124      *null.Decimal          `protobuf:"bytes,13,opt,name=PriceA124,proto3" json:"PriceA124,omitempty"`           //
	PriceB124      *null.Decimal          `protobuf:"bytes,14,opt,name=PriceB124,proto3" json:"PriceB124,omitempty"`           //
	ColDecimal123  *null.Decimal          `protobuf:"bytes,15,opt,name=ColDecimal123,proto3" json:"ColDecimal123,omitempty"`   //
	ColDecimal206  *null.Decimal          `protobuf:"bytes,16,opt,name=ColDecimal206,proto3" json:"ColDecimal206,omitempty"`   //
	ColDecimal2412 *null.Decimal          `protobuf:"bytes,17,opt,name=ColDecimal2412,proto3" json:"ColDecimal2412,omitempty"` //
	ColInt1        int32                  `protobuf:"varint,18,opt,name=ColInt1,proto3" json:"ColInt1,omitempty"`              //
	ColInt2        int32                  `protobuf:"varint,19,opt,name=ColInt2,proto3" json:"ColInt2,omitempty"`              //
	ColInt3        uint32                 `protobuf:"varint,20,opt,name=ColInt3,proto3" json:"ColInt3,omitempty"`              //
	ColInt4        uint32                 `protobuf:"varint,21,opt,name=ColInt4,proto3" json:"ColInt4,omitempty"`              //
	ColLongtext1   string                 `protobuf:"bytes,22,opt,name=ColLongtext1,proto3" json:"ColLongtext1,omitempty"`     //
	ColLongtext2   string                 `protobuf:"bytes,23,opt,name=ColLongtext2,proto3" json:"ColLongtext2,omitempty"`     //
	ColMediumblob  []byte                 `protobuf:"bytes,24,opt,name=ColMediumblob,proto3" json:"ColMediumblob,omitempty"`   //
	ColMediumtext1 string                 `protobuf:"bytes,25,opt,name=ColMediumtext1,proto3" json:"ColMediumtext1,omitempty"` //
	ColMediumtext2 string                 `protobuf:"bytes,26,opt,name=ColMediumtext2,proto3" json:"ColMediumtext2,omitempty"` //
	ColSmallint1   int32                  `protobuf:"varint,27,opt,name=ColSmallint1,proto3" json:"ColSmallint1,omitempty"`    //
	ColSmallint2   int32                  `protobuf:"varint,28,opt,name=ColSmallint2,proto3" json:"ColSmallint2,omitempty"`    //
	ColSmallint3   uint32                 `protobuf:"varint,29,opt,name=ColSmallint3,proto3" json:"ColSmallint3,omitempty"`    //
	ColSmallint4   uint32                 `protobuf:"varint,30,opt,name=ColSmallint4,proto3" json:"ColSmallint4,omitempty"`    //
	HasSmallint5   bool                   `protobuf:"varint,31,opt,name=HasSmallint5,proto3" json:"HasSmallint5,omitempty"`    //
	IsSmallint5    bool                   `protobuf:"varint,32,opt,name=IsSmallint5,proto3" json:"IsSmallint5,omitempty"`      //
	ColText        string                 `protobuf:"bytes,33,opt,name=ColText,proto3" json:"ColText,omitempty"`               //
	ColTimestamp1  *timestamppb.Timestamp `protobuf:"bytes,34,opt,name=ColTimestamp1,proto3" json:"ColTimestamp1,omitempty"`   //
	ColTimestamp2  *timestamppb.Timestamp `protobuf:"bytes,35,opt,name=ColTimestamp2,proto3" json:"ColTimestamp2,omitempty"`   //
	ColTinyint1    int32                  `protobuf:"varint,36,opt,name=ColTinyint1,proto3" json:"ColTinyint1,omitempty"`      //
	ColVarchar1    string                 `protobuf:"bytes,37,opt,name=ColVarchar1,proto3" json:"ColVarchar1,omitempty"`       //
	ColVarchar100  string                 `protobuf:"bytes,38,opt,name=ColVarchar100,proto3" json:"ColVarchar100,omitempty"`   //
	ColVarchar16   string                 `protobuf:"bytes,39,opt,name=ColVarchar16,proto3" json:"ColVarchar16,omitempty"`     //
	ColChar1       string                 `protobuf:"bytes,40,opt,name=ColChar1,proto3" json:"ColChar1,omitempty"`             //
	ColChar2       string                 `protobuf:"bytes,41,opt,name=ColChar2,proto3" json:"ColChar2,omitempty"`             //
}

func (x *DmlgenTypes) Reset() {
	*x = DmlgenTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_gen_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DmlgenTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DmlgenTypes) ProtoMessage() {}

func (x *DmlgenTypes) ProtoReflect() protoreflect.Message {
	mi := &file_output_gen_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DmlgenTypes.ProtoReflect.Descriptor instead.
func (*DmlgenTypes) Descriptor() ([]byte, []int) {
	return file_output_gen_proto_rawDescGZIP(), []int{8}
}

func (x *DmlgenTypes) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *DmlgenTypes) GetColBigint1() int64 {
	if x != nil {
		return x.ColBigint1
	}
	return 0
}

func (x *DmlgenTypes) GetColBigint2() int64 {
	if x != nil {
		return x.ColBigint2
	}
	return 0
}

func (x *DmlgenTypes) GetColBigint3() uint64 {
	if x != nil {
		return x.ColBigint3
	}
	return 0
}

func (x *DmlgenTypes) GetColBigint4() uint64 {
	if x != nil {
		return x.ColBigint4
	}
	return 0
}

func (x *DmlgenTypes) GetColBlob() []byte {
	if x != nil {
		return x.ColBlob
	}
	return nil
}

func (x *DmlgenTypes) GetColDate1() *timestamppb.Timestamp {
	if x != nil {
		return x.ColDate1
	}
	return nil
}

func (x *DmlgenTypes) GetColDate2() *timestamppb.Timestamp {
	if x != nil {
		return x.ColDate2
	}
	return nil
}

func (x *DmlgenTypes) GetColDatetime1() *timestamppb.Timestamp {
	if x != nil {
		return x.ColDatetime1
	}
	return nil
}

func (x *DmlgenTypes) GetColDatetime2() *timestamppb.Timestamp {
	if x != nil {
		return x.ColDatetime2
	}
	return nil
}

func (x *DmlgenTypes) GetColDecimal101() *null.Decimal {
	if x != nil {
		return x.ColDecimal101
	}
	return nil
}

func (x *DmlgenTypes) GetColDecimal124() *null.Decimal {
	if x != nil {
		return x.ColDecimal124
	}
	return nil
}

func (x *DmlgenTypes) GetPriceA124() *null.Decimal {
	if x != nil {
		return x.PriceA124
	}
	return nil
}

func (x *DmlgenTypes) GetPriceB124() *null.Decimal {
	if x != nil {
		return x.PriceB124
	}
	return nil
}

func (x *DmlgenTypes) GetColDecimal123() *null.Decimal {
	if x != nil {
		return x.ColDecimal123
	}
	return nil
}

func (x *DmlgenTypes) GetColDecimal206() *null.Decimal {
	if x != nil {
		return x.ColDecimal206
	}
	return nil
}

func (x *DmlgenTypes) GetColDecimal2412() *null.Decimal {
	if x != nil {
		return x.ColDecimal2412
	}
	return nil
}

func (x *DmlgenTypes) GetColInt1() int32 {
	if x != nil {
		return x.ColInt1
	}
	return 0
}

func (x *DmlgenTypes) GetColInt2() int32 {
	if x != nil {
		return x.ColInt2
	}
	return 0
}

func (x *DmlgenTypes) GetColInt3() uint32 {
	if x != nil {
		return x.ColInt3
	}
	return 0
}

func (x *DmlgenTypes) GetColInt4() uint32 {
	if x != nil {
		return x.ColInt4
	}
	return 0
}

func (x *DmlgenTypes) GetColLongtext1() string {
	if x != nil {
		return x.ColLongtext1
	}
	return ""
}

func (x *DmlgenTypes) GetColLongtext2() string {
	if x != nil {
		return x.ColLongtext2
	}
	return ""
}

func (x *DmlgenTypes) GetColMediumblob() []byte {
	if x != nil {
		return x.ColMediumblob
	}
	return nil
}

func (x *DmlgenTypes) GetColMediumtext1() string {
	if x != nil {
		return x.ColMediumtext1
	}
	return ""
}

func (x *DmlgenTypes) GetColMediumtext2() string {
	if x != nil {
		return x.ColMediumtext2
	}
	return ""
}

func (x *DmlgenTypes) GetColSmallint1() int32 {
	if x != nil {
		return x.ColSmallint1
	}
	return 0
}

func (x *DmlgenTypes) GetColSmallint2() int32 {
	if x != nil {
		return x.ColSmallint2
	}
	return 0
}

func (x *DmlgenTypes) GetColSmallint3() uint32 {
	if x != nil {
		return x.ColSmallint3
	}
	return 0
}

func (x *DmlgenTypes) GetColSmallint4() uint32 {
	if x != nil {
		return x.ColSmallint4
	}
	return 0
}

func (x *DmlgenTypes) GetHasSmallint5() bool {
	if x != nil {
		return x.HasSmallint5
	}
	return false
}

func (x *DmlgenTypes) GetIsSmallint5() bool {
	if x != nil {
		return x.IsSmallint5
	}
	return false
}

func (x *DmlgenTypes) GetColText() string {
	if x != nil {
		return x.ColText
	}
	return ""
}

func (x *DmlgenTypes) GetColTimestamp1() *timestamppb.Timestamp {
	if x != nil {
		return x.ColTimestamp1
	}
	return nil
}

func (x *DmlgenTypes) GetColTimestamp2() *timestamppb.Timestamp {
	if x != nil {
		return x.ColTimestamp2
	}
	return nil
}

func (x *DmlgenTypes) GetColTinyint1() int32 {
	if x != nil {
		return x.ColTinyint1
	}
	return 0
}

func (x *DmlgenTypes) GetColVarchar1() string {
	if x != nil {
		return x.ColVarchar1
	}
	return ""
}

func (x *DmlgenTypes) GetColVarchar100() string {
	if x != nil {
		return x.ColVarchar100
	}
	return ""
}

func (x *DmlgenTypes) GetColVarchar16() string {
	if x != nil {
		return x.ColVarchar16
	}
	return ""
}

func (x *DmlgenTypes) GetColChar1() string {
	if x != nil {
		return x.ColChar1
	}
	return ""
}

func (x *DmlgenTypes) GetColChar2() string {
	if x != nil {
		return x.ColChar2
	}
	return ""
}

// DmlgenTypesCollection represents multiple rows for the dmlgen_types DB table.
// Auto generated.
type DmlgenTypesCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DmlgenTypes `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *DmlgenTypesCollection) Reset() {
	*x = DmlgenTypesCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_gen_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DmlgenTypesCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DmlgenTypesCollection) ProtoMessage() {}

func (x *DmlgenTypesCollection) ProtoReflect() protoreflect.Message {
	mi := &file_output_gen_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DmlgenTypesCollection.ProtoReflect.Descriptor instead.
func (*DmlgenTypesCollection) Descriptor() ([]byte, []int) {
	return file_output_gen_proto_rawDescGZIP(), []int{9}
}

func (x *DmlgenTypesCollection) GetData() []*DmlgenTypes {
	if x != nil {
		return x.Data
	}
	return nil
}

// SalesOrderStatusState represents a single row for sales_order_status_state DB
// table. Auto generated.
// Table comment: Sales Order Status Table
type SalesOrderStatusState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status         string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`                  // Status
	State          string `protobuf:"bytes,2,opt,name=State,proto3" json:"State,omitempty"`                    // Label
	IsDefault      bool   `protobuf:"varint,3,opt,name=IsDefault,proto3" json:"IsDefault,omitempty"`           // Is Default
	VisibleOnFront uint32 `protobuf:"varint,4,opt,name=VisibleOnFront,proto3" json:"VisibleOnFront,omitempty"` // Visible on front
}

func (x *SalesOrderStatusState) Reset() {
	*x = SalesOrderStatusState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_gen_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesOrderStatusState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesOrderStatusState) ProtoMessage() {}

func (x *SalesOrderStatusState) ProtoReflect() protoreflect.Message {
	mi := &file_output_gen_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesOrderStatusState.ProtoReflect.Descriptor instead.
func (*SalesOrderStatusState) Descriptor() ([]byte, []int) {
	return file_output_gen_proto_rawDescGZIP(), []int{10}
}

func (x *SalesOrderStatusState) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SalesOrderStatusState) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SalesOrderStatusState) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *SalesOrderStatusState) GetVisibleOnFront() uint32 {
	if x != nil {
		return x.VisibleOnFront
	}
	return 0
}

// SalesOrderStatusStates represents multiple rows for the
// sales_order_status_state DB table. Auto generated.
type SalesOrderStatusStates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*SalesOrderStatusState `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *SalesOrderStatusStates) Reset() {
	*x = SalesOrderStatusStates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_gen_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesOrderStatusStates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesOrderStatusStates) ProtoMessage() {}

func (x *SalesOrderStatusStates) ProtoReflect() protoreflect.Message {
	mi := &file_output_gen_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesOrderStatusStates.ProtoReflect.Descriptor instead.
func (*SalesOrderStatusStates) Descriptor() ([]byte, []int) {
	return file_output_gen_proto_rawDescGZIP(), []int{11}
}

func (x *SalesOrderStatusStates) GetData() []*SalesOrderStatusState {
	if x != nil {
		return x.Data
	}
	return nil
}

// ViewCustomerAutoIncrement represents a single row for
// view_customer_auto_increment DB table. Auto generated.
// Table comment: VIEW
type ViewCustomerAutoIncrement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CeEntityID uint32 `protobuf:"varint,1,opt,name=CeEntityID,proto3" json:"CeEntityID,omitempty"` // Entity ID
	Email      string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`            // Email
	Firstname  string `protobuf:"bytes,3,opt,name=Firstname,proto3" json:"Firstname,omitempty"`    // First Name
	Lastname   string `protobuf:"bytes,4,opt,name=Lastname,proto3" json:"Lastname,omitempty"`      // Last Name
	City       string `protobuf:"bytes,5,opt,name=City,proto3" json:"City,omitempty"`              // City
}

func (x *ViewCustomerAutoIncrement) Reset() {
	*x = ViewCustomerAutoIncrement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_gen_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewCustomerAutoIncrement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewCustomerAutoIncrement) ProtoMessage() {}

func (x *ViewCustomerAutoIncrement) ProtoReflect() protoreflect.Message {
	mi := &file_output_gen_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewCustomerAutoIncrement.ProtoReflect.Descriptor instead.
func (*ViewCustomerAutoIncrement) Descriptor() ([]byte, []int) {
	return file_output_gen_proto_rawDescGZIP(), []int{12}
}

func (x *ViewCustomerAutoIncrement) GetCeEntityID() uint32 {
	if x != nil {
		return x.CeEntityID
	}
	return 0
}

func (x *ViewCustomerAutoIncrement) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ViewCustomerAutoIncrement) GetFirstname() string {
	if x != nil {
		return x.Firstname
	}
	return ""
}

func (x *ViewCustomerAutoIncrement) GetLastname() string {
	if x != nil {
		return x.Lastname
	}
	return ""
}

func (x *ViewCustomerAutoIncrement) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

// ViewCustomerAutoIncrements represents multiple rows for the
// view_customer_auto_increment DB table. Auto generated.
type ViewCustomerAutoIncrements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ViewCustomerAutoIncrement `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *ViewCustomerAutoIncrements) Reset() {
	*x = ViewCustomerAutoIncrements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_gen_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewCustomerAutoIncrements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewCustomerAutoIncrements) ProtoMessage() {}

func (x *ViewCustomerAutoIncrements) ProtoReflect() protoreflect.Message {
	mi := &file_output_gen_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewCustomerAutoIncrements.ProtoReflect.Descriptor instead.
func (*ViewCustomerAutoIncrements) Descriptor() ([]byte, []int) {
	return file_output_gen_proto_rawDescGZIP(), []int{13}
}

func (x *ViewCustomerAutoIncrements) GetData() []*ViewCustomerAutoIncrement {
	if x != nil {
		return x.Data
	}
	return nil
}

// ViewCustomerNoAutoIncrement represents a single row for
// view_customer_no_auto_increment DB table. Auto generated.
// Table comment: VIEW
type ViewCustomerNoAutoIncrement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email     string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`         // Email
	Firstname string `protobuf:"bytes,2,opt,name=Firstname,proto3" json:"Firstname,omitempty"` // First Name
	Lastname  string `protobuf:"bytes,3,opt,name=Lastname,proto3" json:"Lastname,omitempty"`   // Last Name
	City      string `protobuf:"bytes,4,opt,name=City,proto3" json:"City,omitempty"`           // City
}

func (x *ViewCustomerNoAutoIncrement) Reset() {
	*x = ViewCustomerNoAutoIncrement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_gen_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewCustomerNoAutoIncrement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewCustomerNoAutoIncrement) ProtoMessage() {}

func (x *ViewCustomerNoAutoIncrement) ProtoReflect() protoreflect.Message {
	mi := &file_output_gen_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewCustomerNoAutoIncrement.ProtoReflect.Descriptor instead.
func (*ViewCustomerNoAutoIncrement) Descriptor() ([]byte, []int) {
	return file_output_gen_proto_rawDescGZIP(), []int{14}
}

func (x *ViewCustomerNoAutoIncrement) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ViewCustomerNoAutoIncrement) GetFirstname() string {
	if x != nil {
		return x.Firstname
	}
	return ""
}

func (x *ViewCustomerNoAutoIncrement) GetLastname() string {
	if x != nil {
		return x.Lastname
	}
	return ""
}

func (x *ViewCustomerNoAutoIncrement) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

// ViewCustomerNoAutoIncrements represents multiple rows for the
// view_customer_no_auto_increment DB table. Auto generated.
type ViewCustomerNoAutoIncrements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ViewCustomerNoAutoIncrement `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *ViewCustomerNoAutoIncrements) Reset() {
	*x = ViewCustomerNoAutoIncrements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_gen_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewCustomerNoAutoIncrements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewCustomerNoAutoIncrements) ProtoMessage() {}

func (x *ViewCustomerNoAutoIncrements) ProtoReflect() protoreflect.Message {
	mi := &file_output_gen_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewCustomerNoAutoIncrements.ProtoReflect.Descriptor instead.
func (*ViewCustomerNoAutoIncrements) Descriptor() ([]byte, []int) {
	return file_output_gen_proto_rawDescGZIP(), []int{15}
}

func (x *ViewCustomerNoAutoIncrements) GetData() []*ViewCustomerNoAutoIncrement {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_output_gen_proto protoreflect.FileDescriptor

var file_output_gen_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x64, 0x6d, 0x6c, 0x74, 0x65, 0x73, 0x74, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x69, 0x6f, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x75, 0x6c, 0x6c,
	0x2f, 0x6e, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbb, 0x01, 0x0a, 0x20,
	0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x45, 0x41, 0x56, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x49, 0x44, 0x58,
	0x12, 0x1a, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x75, 0x6c, 0x6c, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6e, 0x0a, 0x22, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x45, 0x41, 0x56, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x49, 0x44, 0x58, 0x65, 0x73, 0x12,
	0x48, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x64, 0x6d, 0x6c, 0x74, 0x65, 0x73, 0x74, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x70, 0x62, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x41, 0x56, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x49, 0x44, 0x58, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xb3, 0x02, 0x0a, 0x11, 0x43, 0x6f,
	0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x07, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x22,
	0x4f, 0x0a, 0x12, 0x43, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6d, 0x6c, 0x74, 0x65, 0x73, 0x74, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xd3, 0x03, 0x0a, 0x15, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x44, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f,
	0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f,
	0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x22, 0x58, 0x0a, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x3d, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x64, 0x6d, 0x6c, 0x74, 0x65, 0x73, 0x74, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x70, 0x62, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xdd, 0x05, 0x0a, 0x0e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x49, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x03, 0x44, 0x6f, 0x62, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x44, 0x6f, 0x62, 0x12, 0x18, 0x0a,
	0x07, 0x52, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x52, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x46, 0x0a, 0x10, 0x52, 0x70, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x52,
	0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x65, 0x0a, 0x17, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x6d, 0x6c,
	0x74, 0x65, 0x73, 0x74, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x70, 0x62, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x22, 0x4a, 0x0a, 0x10, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x6d, 0x6c, 0x74, 0x65, 0x73, 0x74, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x70, 0x62, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xec, 0x0c, 0x0a,
	0x0b, 0x44, 0x6d, 0x6c, 0x67, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x6f, 0x6c, 0x42, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x43, 0x6f, 0x6c, 0x42, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x31, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x6f, 0x6c, 0x42, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x43, 0x6f, 0x6c, 0x42, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x32, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x6f, 0x6c, 0x42, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x43, 0x6f, 0x6c, 0x42, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x33, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x6f, 0x6c, 0x42, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x43, 0x6f, 0x6c, 0x42, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x34, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6c, 0x42, 0x6c, 0x6f, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x43,
	0x6f, 0x6c, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x36, 0x0a, 0x08, 0x43, 0x6f, 0x6c, 0x44, 0x61, 0x74,
	0x65, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x43, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x31, 0x12, 0x36,
	0x0a, 0x08, 0x43, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x43, 0x6f,
	0x6c, 0x44, 0x61, 0x74, 0x65, 0x32, 0x12, 0x3e, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x44, 0x61, 0x74,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x43, 0x6f, 0x6c, 0x44, 0x61, 0x74,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x12, 0x3e, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x44, 0x61, 0x74,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x43, 0x6f, 0x6c, 0x44, 0x61, 0x74,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x32, 0x12, 0x33, 0x0a, 0x0d, 0x43, 0x6f, 0x6c, 0x44, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x31, 0x30, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6e, 0x75, 0x6c, 0x6c, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x0d, 0x43, 0x6f,
	0x6c, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x31, 0x30, 0x31, 0x12, 0x33, 0x0a, 0x0d, 0x43,
	0x6f, 0x6c, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x31, 0x32, 0x34, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x75, 0x6c, 0x6c, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x52, 0x0d, 0x43, 0x6f, 0x6c, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x31, 0x32, 0x34,
	0x12, 0x2b, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x31, 0x32, 0x34, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x75, 0x6c, 0x6c, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x52, 0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x31, 0x32, 0x34, 0x12, 0x2b, 0x0a,
	0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x31, 0x32, 0x34, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x6e, 0x75, 0x6c, 0x6c, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52,
	0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x31, 0x32, 0x34, 0x12, 0x33, 0x0a, 0x0d, 0x43, 0x6f,
	0x6c, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x31, 0x32, 0x33, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x75, 0x6c, 0x6c, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x52, 0x0d, 0x43, 0x6f, 0x6c, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x31, 0x32, 0x33, 0x12,
	0x33, 0x0a, 0x0d, 0x43, 0x6f, 0x6c, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x32, 0x30, 0x36,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x75, 0x6c, 0x6c, 0x2e, 0x44, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x0d, 0x43, 0x6f, 0x6c, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x32, 0x30, 0x36, 0x12, 0x35, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x44, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x32, 0x34, 0x31, 0x32, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e,
	0x75, 0x6c, 0x6c, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x0e, 0x43, 0x6f, 0x6c,
	0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x32, 0x34, 0x31, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x6f, 0x6c, 0x49, 0x6e, 0x74, 0x31, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x43, 0x6f,
	0x6c, 0x49, 0x6e, 0x74, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x49, 0x6e, 0x74, 0x32,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x43, 0x6f, 0x6c, 0x49, 0x6e, 0x74, 0x32, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x49, 0x6e, 0x74, 0x33, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x43, 0x6f, 0x6c, 0x49, 0x6e, 0x74, 0x33, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6c,
	0x49, 0x6e, 0x74, 0x34, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x43, 0x6f, 0x6c, 0x49,
	0x6e, 0x74, 0x34, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x4c, 0x6f, 0x6e, 0x67, 0x74, 0x65,
	0x78, 0x74, 0x31, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x6f, 0x6c, 0x4c, 0x6f,
	0x6e, 0x67, 0x74, 0x65, 0x78, 0x74, 0x31, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x4c, 0x6f,
	0x6e, 0x67, 0x74, 0x65, 0x78, 0x74, 0x32, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43,
	0x6f, 0x6c, 0x4c, 0x6f, 0x6e, 0x67, 0x74, 0x65, 0x78, 0x74, 0x32, 0x12, 0x24, 0x0a, 0x0d, 0x43,
	0x6f, 0x6c, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0d, 0x43, 0x6f, 0x6c, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x62, 0x6c, 0x6f,
	0x62, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x74, 0x65,
	0x78, 0x74, 0x31, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6c, 0x4d, 0x65,
	0x64, 0x69, 0x75, 0x6d, 0x74, 0x65, 0x78, 0x74, 0x31, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6c,
	0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x74, 0x65, 0x78, 0x74, 0x32, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6c, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x74, 0x65, 0x78, 0x74,
	0x32, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x74,
	0x31, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x43, 0x6f, 0x6c, 0x53, 0x6d, 0x61, 0x6c,
	0x6c, 0x69, 0x6e, 0x74, 0x31, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x53, 0x6d, 0x61, 0x6c,
	0x6c, 0x69, 0x6e, 0x74, 0x32, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x43, 0x6f, 0x6c,
	0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x74, 0x32, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6c,
	0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x74, 0x33, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x43, 0x6f, 0x6c, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x74, 0x33, 0x12, 0x22, 0x0a,
	0x0c, 0x43, 0x6f, 0x6c, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x74, 0x34, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x43, 0x6f, 0x6c, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x74,
	0x34, 0x12, 0x22, 0x0a, 0x0c, 0x48, 0x61, 0x73, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x74,
	0x35, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x48, 0x61, 0x73, 0x53, 0x6d, 0x61, 0x6c,
	0x6c, 0x69, 0x6e, 0x74, 0x35, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x53, 0x6d, 0x61, 0x6c, 0x6c,
	0x69, 0x6e, 0x74, 0x35, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x53, 0x6d,
	0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x74, 0x35, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6c, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x40, 0x0a, 0x0d, 0x43, 0x6f, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x31, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x43, 0x6f, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x31, 0x12, 0x40, 0x0a, 0x0d, 0x43, 0x6f, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x32, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x43, 0x6f, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x54, 0x69, 0x6e, 0x79,
	0x69, 0x6e, 0x74, 0x31, 0x18, 0x24, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x43, 0x6f, 0x6c, 0x54,
	0x69, 0x6e, 0x79, 0x69, 0x6e, 0x74, 0x31, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x56, 0x61,
	0x72, 0x63, 0x68, 0x61, 0x72, 0x31, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f,
	0x6c, 0x56, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x31, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6c,
	0x56, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x31, 0x30, 0x30, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x43, 0x6f, 0x6c, 0x56, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x31, 0x30, 0x30, 0x12,
	0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x56, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x31, 0x36, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x6f, 0x6c, 0x56, 0x61, 0x72, 0x63, 0x68, 0x61,
	0x72, 0x31, 0x36, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x31, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x31, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x32, 0x18, 0x29, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x43, 0x6f, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x32, 0x22, 0x4c, 0x0a, 0x15, 0x44,
	0x6d, 0x6c, 0x67, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x6d, 0x6c, 0x74, 0x65, 0x73, 0x74, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x70, 0x62, 0x2e, 0x44, 0x6d, 0x6c, 0x67, 0x65, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x8b, 0x01, 0x0a, 0x15, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x4f, 0x6e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x22, 0x57, 0x0a, 0x16, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x3d, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x64, 0x6d, 0x6c, 0x74, 0x65, 0x73, 0x74, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x9f, 0x01, 0x0a, 0x19, 0x56, 0x69, 0x65, 0x77, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x43, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69,
	0x74, 0x79, 0x22, 0x5f, 0x0a, 0x1a, 0x56, 0x69, 0x65, 0x77, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x41, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x64, 0x6d, 0x6c, 0x74, 0x65, 0x73, 0x74, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x81, 0x01, 0x0a, 0x1b, 0x56, 0x69, 0x65, 0x77, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x43, 0x69, 0x74, 0x79, 0x22, 0x63, 0x0a, 0x1c, 0x56, 0x69, 0x65, 0x77, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x43, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x64, 0x6d, 0x6c, 0x74, 0x65, 0x73, 0x74, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x41, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x42, 0x16, 0x5a, 0x14,
	0x2e, 0x2f, 0x64, 0x6d, 0x6c, 0x74, 0x65, 0x73, 0x74, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_output_gen_proto_rawDescOnce sync.Once
	file_output_gen_proto_rawDescData = file_output_gen_proto_rawDesc
)

func file_output_gen_proto_rawDescGZIP() []byte {
	file_output_gen_proto_rawDescOnce.Do(func() {
		file_output_gen_proto_rawDescData = protoimpl.X.CompressGZIP(file_output_gen_proto_rawDescData)
	})
	return file_output_gen_proto_rawDescData
}

var file_output_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_output_gen_proto_goTypes = []interface{}{
	(*CatalogProductIndexEAVDecimalIDX)(nil),   // 0: dmltestgeneratedpb.CatalogProductIndexEAVDecimalIDX
	(*CatalogProductIndexEAVDecimalIDXes)(nil), // 1: dmltestgeneratedpb.CatalogProductIndexEAVDecimalIDXes
	(*CoreConfiguration)(nil),                  // 2: dmltestgeneratedpb.CoreConfiguration
	(*CoreConfigurations)(nil),                 // 3: dmltestgeneratedpb.CoreConfigurations
	(*CustomerAddressEntity)(nil),              // 4: dmltestgeneratedpb.CustomerAddressEntity
	(*CustomerAddressEntities)(nil),            // 5: dmltestgeneratedpb.CustomerAddressEntities
	(*CustomerEntity)(nil),                     // 6: dmltestgeneratedpb.CustomerEntity
	(*CustomerEntities)(nil),                   // 7: dmltestgeneratedpb.CustomerEntities
	(*DmlgenTypes)(nil),                        // 8: dmltestgeneratedpb.DmlgenTypes
	(*DmlgenTypesCollection)(nil),              // 9: dmltestgeneratedpb.DmlgenTypesCollection
	(*SalesOrderStatusState)(nil),              // 10: dmltestgeneratedpb.SalesOrderStatusState
	(*SalesOrderStatusStates)(nil),             // 11: dmltestgeneratedpb.SalesOrderStatusStates
	(*ViewCustomerAutoIncrement)(nil),          // 12: dmltestgeneratedpb.ViewCustomerAutoIncrement
	(*ViewCustomerAutoIncrements)(nil),         // 13: dmltestgeneratedpb.ViewCustomerAutoIncrements
	(*ViewCustomerNoAutoIncrement)(nil),        // 14: dmltestgeneratedpb.ViewCustomerNoAutoIncrement
	(*ViewCustomerNoAutoIncrements)(nil),       // 15: dmltestgeneratedpb.ViewCustomerNoAutoIncrements
	(*null.Decimal)(nil),                       // 16: null.Decimal
	(*timestamppb.Timestamp)(nil),              // 17: google.protobuf.Timestamp
}
var file_output_gen_proto_depIdxs = []int32{
	16, // 0: dmltestgeneratedpb.CatalogProductIndexEAVDecimalIDX.Value:type_name -> null.Decimal
	0,  // 1: dmltestgeneratedpb.CatalogProductIndexEAVDecimalIDXes.Data:type_name -> dmltestgeneratedpb.CatalogProductIndexEAVDecimalIDX
	17, // 2: dmltestgeneratedpb.CoreConfiguration.Expires:type_name -> google.protobuf.Timestamp
	17, // 3: dmltestgeneratedpb.CoreConfiguration.VersionTs:type_name -> google.protobuf.Timestamp
	17, // 4: dmltestgeneratedpb.CoreConfiguration.VersionTe:type_name -> google.protobuf.Timestamp
	2,  // 5: dmltestgeneratedpb.CoreConfigurations.Data:type_name -> dmltestgeneratedpb.CoreConfiguration
	17, // 6: dmltestgeneratedpb.CustomerAddressEntity.CreatedAt:type_name -> google.protobuf.Timestamp
	17, // 7: dmltestgeneratedpb.CustomerAddressEntity.UpdatedAt:type_name -> google.protobuf.Timestamp
	4,  // 8: dmltestgeneratedpb.CustomerAddressEntities.Data:type_name -> dmltestgeneratedpb.CustomerAddressEntity
	17, // 9: dmltestgeneratedpb.CustomerEntity.CreatedAt:type_name -> google.protobuf.Timestamp
	17, // 10: dmltestgeneratedpb.CustomerEntity.UpdatedAt:type_name -> google.protobuf.Timestamp
	17, // 11: dmltestgeneratedpb.CustomerEntity.Dob:type_name -> google.protobuf.Timestamp
	17, // 12: dmltestgeneratedpb.CustomerEntity.RpTokenCreatedAt:type_name -> google.protobuf.Timestamp
	5,  // 13: dmltestgeneratedpb.CustomerEntity.CustomerAddressEntities:type_name -> dmltestgeneratedpb.CustomerAddressEntities
	6,  // 14: dmltestgeneratedpb.CustomerEntities.Data:type_name -> dmltestgeneratedpb.CustomerEntity
	17, // 15: dmltestgeneratedpb.DmlgenTypes.ColDate1:type_name -> google.protobuf.Timestamp
	17, // 16: dmltestgeneratedpb.DmlgenTypes.ColDate2:type_name -> google.protobuf.Timestamp
	17, // 17: dmltestgeneratedpb.DmlgenTypes.ColDatetime1:type_name -> google.protobuf.Timestamp
	17, // 18: dmltestgeneratedpb.DmlgenTypes.ColDatetime2:type_name -> google.protobuf.Timestamp
	16, // 19: dmltestgeneratedpb.DmlgenTypes.ColDecimal101:type_name -> null.Decimal
	16, // 20: dmltestgeneratedpb.DmlgenTypes.ColDecimal124:type_name -> null.Decimal
	16, // 21: dmltestgeneratedpb.DmlgenTypes.PriceA124:type_name -> null.Decimal
	16, // 22: dmltestgeneratedpb.DmlgenTypes.PriceB124:type_name -> null.Decimal
	16, // 23: dmltestgeneratedpb.DmlgenTypes.ColDecimal123:type_name -> null.Decimal
	16, // 24: dmltestgeneratedpb.DmlgenTypes.ColDecimal206:type_name -> null.Decimal
	16, // 25: dmltestgeneratedpb.DmlgenTypes.ColDecimal2412:type_name -> null.Decimal
	17, // 26: dmltestgeneratedpb.DmlgenTypes.ColTimestamp1:type_name -> google.protobuf.Timestamp
	17, // 27: dmltestgeneratedpb.DmlgenTypes.ColTimestamp2:type_name -> google.protobuf.Timestamp
	8,  // 28: dmltestgeneratedpb.DmlgenTypesCollection.Data:type_name -> dmltestgeneratedpb.DmlgenTypes
	10, // 29: dmltestgeneratedpb.SalesOrderStatusStates.Data:type_name -> dmltestgeneratedpb.SalesOrderStatusState
	12, // 30: dmltestgeneratedpb.ViewCustomerAutoIncrements.Data:type_name -> dmltestgeneratedpb.ViewCustomerAutoIncrement
	14, // 31: dmltestgeneratedpb.ViewCustomerNoAutoIncrements.Data:type_name -> dmltestgeneratedpb.ViewCustomerNoAutoIncrement
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_output_gen_proto_init() }
func file_output_gen_proto_init() {
	if File_output_gen_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_output_gen_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogProductIndexEAVDecimalIDX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_gen_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogProductIndexEAVDecimalIDXes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_gen_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoreConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_gen_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoreConfigurations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_gen_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerAddressEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_gen_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerAddressEntities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_gen_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_gen_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerEntities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_gen_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DmlgenTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_gen_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DmlgenTypesCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_gen_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesOrderStatusState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_gen_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesOrderStatusStates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_gen_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewCustomerAutoIncrement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_gen_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewCustomerAutoIncrements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_gen_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewCustomerNoAutoIncrement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_gen_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewCustomerNoAutoIncrements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_output_gen_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_output_gen_proto_goTypes,
		DependencyIndexes: file_output_gen_proto_depIdxs,
		MessageInfos:      file_output_gen_proto_msgTypes,
	}.Build()
	File_output_gen_proto = out.File
	file_output_gen_proto_rawDesc = nil
	file_output_gen_proto_goTypes = nil
	file_output_gen_proto_depIdxs = nil
}
